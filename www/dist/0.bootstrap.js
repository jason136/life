(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/life.js":
/*!**********************!*\
  !*** ../pkg/life.js ***!
  \**********************/
/*! exports provided: Node, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./life_bg.wasm */ \"../pkg/life_bg.wasm\");\n/* harmony import */ var _life_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./life_bg.js */ \"../pkg/life_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return _life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///../pkg/life.js?");

/***/ }),

/***/ "../pkg/life_bg.js":
/*!*************************!*\
  !*** ../pkg/life_bg.js ***!
  \*************************/
/*! exports provided: Node, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./life_bg.wasm */ \"../pkg/life_bg.wasm\");\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction getArrayI32FromWasm0(ptr, len) {\n    return getInt32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint32Memory0 = new Uint32Array(_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n*/\nclass Node {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Node.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_node_free\"](ptr);\n    }\n    /**\n    * @returns {BigInt}\n    */\n    hash() {\n        try {\n            const retptr = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_hash\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    population() {\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_population\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    level() {\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_level\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Node}\n    */\n    a() {\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_a\"](this.ptr);\n        return Node.__wrap(ret);\n    }\n    /**\n    * @returns {Node}\n    */\n    b() {\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_b\"](this.ptr);\n        return Node.__wrap(ret);\n    }\n    /**\n    * @returns {Node}\n    */\n    c() {\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_c\"](this.ptr);\n        return Node.__wrap(ret);\n    }\n    /**\n    * @returns {Node}\n    */\n    d() {\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_d\"](this.ptr);\n        return Node.__wrap(ret);\n    }\n    /**\n    * @param {Node} node\n    * @param {number} n\n    * @returns {Node}\n    */\n    static advance(node, n) {\n        _assertClass(node, Node);\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_advance\"](node.ptr, n);\n        return Node.__wrap(ret);\n    }\n    /**\n    * @param {Node} node\n    * @param {number} n\n    * @returns {Node}\n    */\n    static ffwd(node, n) {\n        _assertClass(node, Node);\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_ffwd\"](node.ptr, n);\n        return Node.__wrap(ret);\n    }\n    /**\n    * @param {Node} node\n    * @param {number} x\n    * @param {number} y\n    * @returns {Int32Array}\n    */\n    static expand(node, x, y) {\n        try {\n            const retptr = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _assertClass(node, Node);\n            _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_expand\"](retptr, node.ptr, x, y);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayI32FromWasm0(r0, r1).slice();\n            _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 4);\n            return v0;\n        } finally {\n            _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n        }\n    }\n    /**\n    * @param {Int32Array} pts\n    * @returns {Node}\n    */\n    static construct(pts) {\n        const ptr0 = passArray32ToWasm0(pts, _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = _life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"node_construct\"](ptr0, len0);\n        return Node.__wrap(ret);\n    }\n}\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/life_bg.js?");

/***/ }),

/***/ "../pkg/life_bg.wasm":
/*!***************************!*\
  !*** ../pkg/life_bg.wasm ***!
  \***************************/
/*! exports provided: memory, __wbg_node_free, node_hash, node_population, node_level, node_a, node_b, node_c, node_d, node_advance, node_ffwd, node_expand, node_construct, __wbindgen_add_to_stack_pointer, __wbindgen_free, __wbindgen_malloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./life_bg.js */ \"../pkg/life_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/life_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var life__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! life */ \"../pkg/life.js\");\n/* harmony import */ var life_life_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! life/life_bg */ \"../pkg/life_bg.wasm\");\n\r\n\r\n\r\nconst CELL_SIZE = 0.1;\r\nconst GRID_COLOR = \"#CCCCCC\";\r\nconst DEAD_COLOR = \"#FFFFFF\";\r\nconst ALIVE_COLOR = \"#000000\";\r\n\r\nconst items = [10, 15, 20, 25, 25, 40, 5, 7, 4, 7, 2, 8, 55, 52, 47, 58];\r\nconst node = life__WEBPACK_IMPORTED_MODULE_0__[\"Node\"].construct(items);\r\nconsole.log(node);\r\nconsole.log(node.hash());\r\nconsole.log(node.level());\r\nconsole.log(node.population());\r\n\r\n// console.log('call ffwd');\r\n// Node.ffwd(node, 10);\r\n\r\nconsole.log(\"new population: \", node.population());\r\n\r\nconst button = document.getElementById(\"create\");\r\n\r\nbutton.addEventListener(\"click\", () => {\r\n  const items1 = [1, 1, 2, 2, 3, 3, 4, 4, -1, -1, -2, -2, -3, -3, -4, -4, 1000, 1000];\r\n  const node1 = life__WEBPACK_IMPORTED_MODULE_0__[\"Node\"].construct(items1);\r\n  console.log(node1.level());\r\n  console.log(node1.population());\r\n  const items2 = life__WEBPACK_IMPORTED_MODULE_0__[\"Node\"].expand(node1, 0, 0);\r\n  console.log(items2);\r\n})\r\n\r\n\r\n// function drawSquare(gl, x, y) {\r\n//     const positionBuffer = gl.createBuffer();\r\n//     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n//     const positions = [\r\n//         CELL_SIZE / 2 + x, CELL_SIZE / 2  - y,\r\n//         -CELL_SIZE / 2 + x, CELL_SIZE / 2 - y,\r\n//         CELL_SIZE / 2 + x, -CELL_SIZE / 2 - y,\r\n//         -CELL_SIZE / 2 + x, -CELL_SIZE / 2 - y,\r\n//     ];\r\n\r\n//     gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n//     return {\r\n//         position: positionBuffer,\r\n//     };\r\n// };\r\n\r\n// const drawGrid = () => {\r\n//     ctx.beginPath();\r\n//     ctx.strokeStyle = GRID_COLOR;\r\n\r\n//     for (let x = 0; x <= width; x++) {\r\n//         ctx.moveTo(x * (CELL_SIZE + 1) + 1, 0);\r\n//         ctx.lineTo(x * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\r\n//     }\r\n\r\n//     for (let y = 0; y <= height; y++) {\r\n//         ctx.moveTo(0, y * (CELL_SIZE + 1) + 1);\r\n//         ctx.lineTo((CELL_SIZE + 1) * width + 1, y * (CELL_SIZE + 1) + 1);\r\n//     }\r\n\r\n//     ctx.stroke();\r\n// };\r\n\r\n// const getIndex = (row, column) => {\r\n//     return row * width + column;\r\n// };\r\n// const bitIsSet = (n, arr) => {\r\n//     const byte = Math.floor(n / 8);\r\n//     const mask = 1 << (n % 8);\r\n//     return (arr[byte] & mask) === mask;\r\n// };\r\n\r\n// const drawCells = () => {\r\n//     const cellsPtr = universe.cells();\r\n//     const cells = new Uint8Array(memory.buffer, cellsPtr, width * height / 8);\r\n\r\n//     ctx.beginPath();\r\n\r\n//     ctx.fillStyle = ALIVE_COLOR;\r\n//     for (let row = 0; row < height; row++) {\r\n//         for (let col = 0; col < width; col++) {\r\n//             const idx = getIndex(row, col);\r\n//             if (bitIsSet(idx, cells)) continue;\r\n//             ctx.fillRect(\r\n//                 col * (CELL_SIZE + 1) + 1,\r\n//                 row * (CELL_SIZE + 1) + 1,\r\n//                 CELL_SIZE,\r\n//                 CELL_SIZE\r\n//             );\r\n//         }\r\n//     }\r\n//     ctx.fillStyle = DEAD_COLOR;\r\n//     for (let row = 0; row < height; row++) {\r\n//         for (let col = 0; col < width; col++) {\r\n//             const idx = getIndex(row, col);\r\n//             if (!bitIsSet(idx, cells)) continue;\r\n//             ctx.fillRect(\r\n//                 col * (CELL_SIZE + 1) + 1,\r\n//                 row * (CELL_SIZE + 1) + 1,\r\n//                 CELL_SIZE,\r\n//                 CELL_SIZE\r\n//             );\r\n//         }\r\n//     }\r\n//     ctx.stroke();\r\n// };\r\n\r\n// canvas.addEventListener(\"click\", event => {\r\n//     const boundingRect = canvas.getBoundingClientRect();\r\n//     const scaleX = canvas.width / boundingRect.width;\r\n//     const scaleY = canvas.height / boundingRect.height;\r\n\r\n//     const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\r\n//     const canvasTop = (event.clientY - boundingRect.top) * scaleY;\r\n\r\n//     const row = Math.min(Math.floor(canvasTop / (CELL_SIZE + 1)), height - 1);\r\n//     const col = Math.min(Math.floor(canvasLeft / (CELL_SIZE + 1)), width - 1);\r\n\r\n//     universe.toggle_cell(row, col);\r\n\r\n//     if (event.shiftKey) {\r\n//         universe.toggle_cell(row, col);\r\n//     }\r\n\r\n//     drawGrid();\r\n//     drawCells();\r\n// });\r\n\r\nconst fps = new class {\r\n    constructor() {\r\n        this.fps = document.getElementById(\"fps\");\r\n        this.frames = [];\r\n        this.lastFrameTimeStamp = performance.now();\r\n    }\r\n\r\n    render() {\r\n        const now = performance.now();\r\n        const delta = now - this.lastFrameTimeStamp;\r\n        this.lastFrameTimeStamp = now;\r\n        const fps = 1 / delta * 1000;\r\n    \r\n        this.frames.push(fps);\r\n        if (this.frames.length > 100) {\r\n          this.frames.shift();\r\n        }\r\n    \r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let sum = 0;\r\n        for (let i = 0; i < this.frames.length; i++) {\r\n          sum += this.frames[i];\r\n          min = Math.min(this.frames[i], min);\r\n          max = Math.max(this.frames[i], max);\r\n        }\r\n        let mean = sum / this.frames.length;\r\n    \r\n        this.fps.textContent = `\r\n        Frames per Second:\r\n        latest = ${Math.round(fps)}\r\n        avg of last 100 = ${Math.round(mean)}\r\n        min of last 100 = ${Math.round(min)}\r\n        max of last 100 = ${Math.round(max)}\r\n        `.trim();\r\n    }\r\n};\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ })

}]);